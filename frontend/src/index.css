@import "tailwindcss";

@theme {
  --font-sans: "Sora", ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

html, body, #root {
  height: 100%;
}

body {
  @apply bg-[#0b0f19] text-gray-100 antialiased;
}

/* Ensure all buttons show a pointer (clicker) cursor on hover */
button:hover { cursor: pointer; }

/* Animated gradient background */
.bg-grid {
  background-image: radial-gradient(circle at 1px 1px, rgb(255 255 255 / 6%) 1px, transparent 0);
  background-size: 24px 24px;
  mask-image: radial-gradient(ellipse at center, black 60%, transparent 100%);
  /* animation disabled for performance */
  animation: none;
}

.glow {
  position: absolute;
  width: 32rem;
  height: 32rem;
  border-radius: 9999px;
  background: radial-gradient(closest-side, rgb(124 58 237 / 0.25), transparent);
  filter: blur(60px);
  /* animation disabled for performance */
  animation: none;
}

@keyframes float {
  0% { transform: translateY(0) translateX(0); }
  50% { transform: translateY(-20px) translateX(20px); }
  100% { transform: translateY(0) translateX(0); }
}

@keyframes gridPan {
  0% { background-position: 0 0; }
  100% { background-position: 240px 240px; }
}

/* Reveal animations */
.reveal-up { animation: revealUp 700ms ease-out both; }
.reveal-fade { animation: revealFade 900ms ease-out both; }

@keyframes revealUp {
  from { opacity: 0; transform: translateY(12px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes revealFade {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Floating image */
.float-slow { animation: float 12s ease-in-out infinite; }

/* Button sheen effect */
.btn-sheen { position: relative; overflow: hidden; }
.btn-sheen::before {
  content: "";
  position: absolute;
  inset: 0 auto 0 -60%;
  width: 60%;
  transform: skewX(-20deg);
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.25), transparent);
  /* animation disabled for performance */
  animation: none;
}

@keyframes sheen {
  0% { left: -60%; }
  60% { left: 120%; }
  100% { left: 120%; }
}

/* Typography tweaks for markdown */
.prose { --tw-prose-body: theme(colors.gray.200); }
.prose :where(p):not(:where([class~="not-prose"] *)) { margin-top: 0.9em; margin-bottom: 0.9em; }
.prose > :where(:first-child):not(:where([class~="not-prose"] *)) { margin-top: 0 !important; }
.prose :where(h1:first-child, h2:first-child, h3:first-child, h4:first-child):not(:where([class~="not-prose"] *)) { margin-top: 0 !important; }
.prose :where(h1):not(:where([class~="not-prose"] *)) {
  font-weight: 800; letter-spacing: -0.01em;
  font-size: clamp(1.75rem, 1.2vw + 1rem, 2.25rem);
  margin-top: 1.25em; margin-bottom: 0.6em;
}
.prose :where(h2):not(:where([class~="not-prose"] *)) {
  font-weight: 800; letter-spacing: -0.01em;
  font-size: clamp(1.5rem, 1vw + 0.75rem, 2rem);
  margin-top: 1.15em; margin-bottom: 0.55em;
}
.prose :where(h3):not(:where([class~="not-prose"] *)) {
  font-weight: 700; letter-spacing: -0.005em;
  font-size: clamp(1.25rem, 0.8vw + 0.75rem, 1.5rem);
  margin-top: 1em; margin-bottom: 0.5em;
}
.prose :where(h4):not(:where([class~="not-prose"] *)) {
  font-weight: 700; letter-spacing: -0.005em;
  margin-top: 1.1em; margin-bottom: 0.5em;
}
.prose :where(ul,ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.9em; margin-bottom: 0.9em; padding-left: 1.25rem;
}
.prose :where(ul):not(:where([class~="not-prose"] *)) { list-style: disc; }
.prose :where(ol):not(:where([class~="not-prose"] *)) { list-style: decimal; }
.prose :where(li):not(:where([class~="not-prose"] *)) { margin-top: 0.3em; margin-bottom: 0.3em; }
.prose :where(li)::marker { color: rgb(229 231 235 / 0.6); }
.prose :where(strong):not(:where([class~="not-prose"] *)) { color: #f3f4f6; }
.prose :where(a):not(:where([class~="not-prose"] *)) { color: #a5b4fc; text-decoration-color: rgb(255 255 255 / 0.3); }
.prose :where(code):not(:where([class~="not-prose"] *)) { background: rgb(255 255 255 / 0.06); padding: 0.15em 0.35em; border-radius: 0.375rem; }
.prose :where(pre):not(:where([class~="not-prose"] *)) { background: rgb(255 255 255 / 0.05); border: 1px solid rgb(255 255 255 / 0.12); }
.prose :where(blockquote):not(:where([class~="not-prose"] *)) { color: #d1d5db; border-left-color: rgb(255 255 255 / 0.2); }
.prose :where(hr):not(:where([class~="not-prose"] *)) { border-color: rgb(255 255 255 / 0.12); margin-top: 1.5em; margin-bottom: 1.5em; }

